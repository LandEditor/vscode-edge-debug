{
	"name": "debugger-for-edge",
	"displayName": "Debugger for Edge",
	"description": "Debug your JavaScript code in the Edge browser.",
	"scripts": {
		"build": "node ./node_modules/gulp/bin/gulp.js build"
	},
	"contributes": {
		"debuggers": [
			{
				"aiKey": "AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217",
				"configurationAttributes": {
					"attach": {
						"properties": {
							"address": {
								"default": "127.0.0.1",
								"description": "TCP/IP address of debug port",
								"type": "string"
							},
							"diagnosticLogging": {
								"default": true,
								"deprecationMessage": "'diagnosticLogging' is deprecated. Use 'trace' instead.",
								"description": "When true, the adapter logs its own diagnostic info to the console in a human readable format",
								"type": "boolean"
							},
							"disableNetworkCache": {
								"default": true,
								"description": "Controls whether to skip the network cache for each request",
								"type": "boolean"
							},
							"pathMapping": {
								"default": {},
								"description": "A mapping of URLs/paths to local folders, to resolve scripts in Chrome to scripts on disk",
								"type": "object"
							},
							"port": {
								"default": 9222,
								"description": "Port to use for Chrome remote debugging.",
								"type": "number"
							},
							"showAsyncStacks": {
								"default": true,
								"description": "Show the async calls that led to the current call stack",
								"type": "boolean"
							},
							"skipFiles": {
								"default": [],
								"description": "An array of file or folder names, or path globs, to skip when debugging.",
								"type": "array"
							},
							"smartStep": {
								"default": true,
								"description": "Automatically step through generated code that cannot be mapped back to the original source.",
								"type": "boolean"
							},
							"sourceMapPathOverrides": {
								"default": {},
								"description": "A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk. See README for details.",
								"type": "object"
							},
							"sourceMaps": {
								"default": true,
								"description": "Use JavaScript source maps (if they exist).",
								"type": "boolean"
							},
							"timeout": {
								"default": 10000,
								"description": "Retry for this number of milliseconds to connect to Chrome. Default is 10000 ms.",
								"type": "number"
							},
							"trace": {
								"default": true,
								"description": "When 'true', the debugger will log tracing info to a file. When 'verbose', it will also show logs in the console.",
								"enum": [
									"verbose",
									true
								],
								"type": [
									"boolean",
									"string"
								]
							},
							"url": {
								"default": "http://localhost:8080",
								"description": "Will search for a tab with this EXACT url and attach to it, if found",
								"type": "string"
							},
							"urlFilter": {
								"default": "",
								"description": "Will search for a page with this url and attach to it, if found. Can have * wildcards.",
								"type": "string"
							},
							"verboseDiagnosticLogging": {
								"default": true,
								"deprecationMessage": "'verboseDiagnosticLogging' is deprecated. Use 'trace' instead.",
								"description": "When true, the adapter logs all traffic with the client and target (as well as the info logged by 'diagnosticLogging')",
								"type": "boolean"
							},
							"webRoot": {
								"default": "${workspaceRoot}",
								"description": "This specifies the workspace absolute path to the webserver root. Used to resolve paths like `/app.js` to files on disk. Shorthand for a pathMapping for \"/\"",
								"type": "string"
							}
						},
						"required": [
							"port"
						]
					},
					"launch": {
						"properties": {
							"address": {
								"default": "127.0.0.1",
								"description": "TCP/IP address of debug port",
								"type": "string"
							},
							"diagnosticLogging": {
								"default": true,
								"deprecationMessage": "'diagnosticLogging' is deprecated. Use 'trace' instead.",
								"description": "When true, the adapter logs its own diagnostic info to the console in a human readable format",
								"type": "boolean"
							},
							"disableNetworkCache": {
								"default": true,
								"description": "Controls whether to skip the network cache for each request",
								"type": "boolean"
							},
							"file": {
								"default": "${workspaceRoot}/index.html",
								"description": "A local html file to open in the browser",
								"type": "string"
							},
							"pathMapping": {
								"default": {
									"/": "${workspaceRoot}"
								},
								"description": "A mapping of URLs/paths to local folders, to resolve scripts in Chrome to scripts on disk",
								"type": "object"
							},
							"port": {
								"default": 9222,
								"description": "Port to use for Chrome remote debugging.",
								"type": "number"
							},
							"runtimeArgs": {
								"default": [],
								"description": "Optional arguments passed to the runtime executable.",
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"runtimeExecutable": {
								"default": null,
								"description": "Workspace absolute path to the runtime executable to be used. If not specified, Chrome will be used from the default install location.",
								"type": [
									"string",
									"null"
								]
							},
							"showAsyncStacks": {
								"default": true,
								"description": "Show the async calls that led to the current call stack",
								"type": "boolean"
							},
							"skipFiles": {
								"default": [],
								"description": "An array of file or folder names, or path globs, to skip when debugging.",
								"type": "array"
							},
							"smartStep": {
								"default": true,
								"description": "Automatically step through generated code that cannot be mapped back to the original source.",
								"type": "boolean"
							},
							"sourceMapPathOverrides": {
								"default": {},
								"description": "A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk. See README for details.",
								"type": "object"
							},
							"sourceMaps": {
								"default": true,
								"description": "Use JavaScript source maps (if they exist).",
								"type": "boolean"
							},
							"timeout": {
								"default": 10000,
								"description": "Retry for this number of milliseconds to connect to Chrome. Default is 10000 ms.",
								"type": "number"
							},
							"trace": {
								"default": true,
								"description": "When 'true', the debugger will log tracing info to a file. When 'verbose', it will also show logs in the console.",
								"enum": [
									"verbose",
									true
								],
								"type": [
									"boolean",
									"string"
								]
							},
							"url": {
								"default": "http://localhost:8080",
								"description": "A url to open in the browser",
								"type": "string"
							},
							"urlFilter": {
								"default": "",
								"description": "Will search for a page with this url and attach to it, if found. Can have * wildcards.",
								"type": "string"
							},
							"userDataDir": {
								"default": "",
								"description": "By default, Chrome is launched with a separate user profile in a temp folder. Use this option to override it. Set to false to launch with your default user profile.",
								"type": [
									"string",
									"boolean"
								]
							},
							"verboseDiagnosticLogging": {
								"default": true,
								"deprecationMessage": "'verboseDiagnosticLogging' is deprecated. Use 'trace' instead.",
								"description": "When true, the adapter logs all traffic with the client and target (as well as the info logged by 'diagnosticLogging')",
								"type": "boolean"
							},
							"webRoot": {
								"default": "${workspaceRoot}",
								"description": "When the 'url' field is specified, this specifies the workspace absolute path to the webserver root. Shorthand for a pathMapping for \"/\"",
								"type": "string"
							}
						},
						"required": []
					}
				},
				"enableBreakpointsFor": {
					"languageIds": [
						"javascript",
						"typescriptreact"
					]
				},
				"initialConfigurations": [
					{
						"file": "${workspaceRoot}/index.html",
						"name": "Launch index.html",
						"request": "launch",
						"type": "edge"
					},
					{
						"name": "Launch localhost with sourcemaps",
						"request": "launch",
						"sourceMaps": true,
						"type": "edge",
						"url": "http://localhost/mypage.html",
						"webRoot": "wwwroot"
					},
					{
						"name": "Attach",
						"port": 9222,
						"request": "attach",
						"type": "edge"
					}
				],
				"label": "Edge",
				"program": "./out/src/edgeDebug.js",
				"runtime": "node",
				"type": "edge"
			}
		]
	},
	"dependencies": {
		"edge-diagnostics-adapter": "0.6.0",
		"source-map": "0.7.4",
		"ws": "8.18.0"
	},
	"devDependencies": {
		"@types/node": "22.13.1",
		"mockery": "2.1.0",
		"sinon": "19.0.2"
	},
	"icon": "images/icon.png"
}
